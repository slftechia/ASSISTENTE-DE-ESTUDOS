trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  NODE_VERSION: '18.x'

stages:
- stage: Build
  displayName: 'Build Application'
  jobs:
  - job: BuildFrontend
    displayName: 'Build Frontend'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(NODE_VERSION)'
      displayName: 'Install Node.js'

    - script: |
        cd frontend
        npm install
        npm run build
      displayName: 'Build Frontend'

    - task: CopyFiles@2
      inputs:
        SourceFolder: 'frontend/dist'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/frontend'
      displayName: 'Copy Frontend to staging'

  - job: BuildBackend
    displayName: 'Build Backend'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(NODE_VERSION)'
      displayName: 'Install Node.js'

    - script: |
        cd backend
        npm install
      displayName: 'Install Backend Dependencies'

    - task: CopyFiles@2
      inputs:
        SourceFolder: 'backend'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/backend'
      displayName: 'Copy Backend to staging'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish Build Artifacts'

- stage: Deploy
  displayName: 'Deploy to Azure'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployToAzure
    displayName: 'Deploy to Azure Web App'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Your-Azure-Subscription'
              appName: 'portal-api-assistente-estudos'
              package: '$(Pipeline.Workspace)/drop/backend'
              appType: 'webApp'
              deploymentMethod: 'auto'